openapi: 3.0.0
info:
  title: Document Management API
  description: API for managing documents including CRUD operations.
  version: 1.0.0

servers:
  - url: 'http://localhost:8080'
    description: Local server

paths:
  /documents:
    get:
      summary: Get Documents
      description: Retrieve a list of documents for the authenticated user.
      parameters:
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: pageToken
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of documents.
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        latex_code:
                          type: string
                        template:
                          type: string
                        user_id:
                          type: string
                        category:
                          type: string
                        can_access:
                          type: array
                          items:
                            type: string
                  nextPageToken:
                    type: string
                required:
                  - documents
        '401':
          description: Unauthorized
        '400':
          description: Bad Request

    post:
      summary: Add Document
      description: Upload images and create a new document based on the provided template and user instructions.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                template_id:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '201':
          description: Document created and PDF generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /documents/{docId}:
    put:
      summary: Update Document
      description: Update an existing document based on the provided instructions.
      parameters:
        - name: docId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_prompt:
                  type: string
                title:
                  type: string
                latex_code:
                  type: string
      responses:
        '200':
          description: Document updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Document Not Found

    delete:
      summary: Delete Document
      description: Delete an existing document.
      parameters:
        - name: docId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Document deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Document Not Found
